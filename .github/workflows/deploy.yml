name: deploy to production

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.33.2'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: AKIAZDZTBN7TARKHW73Z
          aws-secret-access-key: 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
          aws-region: ap-southeast-2

      - name: Verify AWS CLI Login (Optional)
        run: |
          echo "Verifying AWS CLI configuration..."
          aws sts get-caller-identity
          echo "AWS CLI configured successfully."

      - name: Debug identity
        run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Update kubeconfig for Amazon EKS
        run: |
          echo "--- Running aws eks update-kubeconfig ---"
          aws eks update-kubeconfig --name test-new-type --region ap-southeast-2

          echo "--- Kubeconfig content ---"
          cat ~/.kube/config

          echo "--- Kiểm tra trực tiếp lệnh lấy EKS token (CỰC KỲ QUAN TRỌNG) ---"
          # Chạy lệnh get-token và chuyển hướng output lỗi (stderr) sang stdout
          # để chúng ta có thể thấy nó trong log của GitHub Actions.
          # `|| true` đảm bảo bước này không fail job ngay lập tức nếu lệnh get-token lỗi.
          aws eks get-token --cluster-name test-new-type --region ap-southeast-2 2>&1 | tee eks_get_token_raw_output.txt || true

          echo "--- Nội dung file eks_get_token_raw_output.txt ---"
          cat eks_get_token_raw_output.txt

          echo "--- Chạy kubectl cluster-info (để xem lỗi sau khi cố gắng lấy token) ---"
          kubectl cluster-info || true

          echo "--- Chạy kubectl get nodes --v=9 (để debug sâu hơn) ---"
          kubectl get nodes --v=9 || true

      - name: Load secrets from AWS Secrets Manager
        run: |
          aws secretsmanager get-secret-value --secret-id simple_bank \
          --query SecretString --output text | \
          jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > .env

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
                       -t $REGISTRY/$REPOSITORY:latest .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest

      - name: Deploy image to Amazon EKS
        run: |
          kubectl apply -f eks/aws-auth.yaml
          kubectl apply -f eks/deployment.yaml
          kubectl apply -f eks/service.yaml
          kubectl apply -f eks/issuer.yaml
          kubectl apply -f eks/ingress.yaml